{"version":3,"sources":["main.js"],"names":["factory","define","amd","module","exports","require","jQuery","$","_previousResizeWidth","_updateTimeout","_parse","value","parseFloat","_rows","elements","$elements","lastTop","rows","each","$that","this","top","offset","css","lastRow","length","push","Math","floor","abs","add","_parseOptions","options","opts","byRow","property","target","remove","extend","matchHeight","fn","that","_groups","key","group","not","_apply","version","_throttle","_maintainScroll","_beforeUpdate","_afterUpdate","scrollTop","window","htmlHeight","outerHeight","$hiddenParents","parents","filter","data","attr","display","padding-top","padding-bottom","margin-top","margin-bottom","border-top-width","border-bottom-width","height","overflow","row","$row","targetHeight","style","verticalPadding","is","_applyDataApi","groups","$this","groupId","_update","event","throttle","type","windowWidth","width","setTimeout","on","click","toggleClass","fadeToggle","mySwiper","Swiper","loop","autoplay","pagination","el","navigation","nextEl","prevEl","scrollbar","document","preventDefault","ekkoLightbox","ready","button","relatedTarget","subjId","val","owlCarousel","nav","stagePadding","margin","responsiveClass","responsive","0","items","568","600","1000","i","console","log","scroll","addClass","removeClass","first"],"mappings":"CAOA,SAAAA,GACA,YACA,mBAAAC,SAAAA,OAAAC,IAEAD,QAAA,UAAAD,GACA,mBAAAG,SAAAA,OAAAC,QAEAD,OAAAC,QAAAJ,EAAAK,QAAA,WAGAL,EAAAM,SAEA,SAAAC,GAKA,GAAAC,IAAA,EACAC,GAAA,EAOAC,EAAA,SAAAC,GAEA,MAAAC,YAAAD,IAAA,GASAE,EAAA,SAAAC,GACA,GACAC,GAAAR,EAAAO,GACAE,EAAA,KACAC,IAyBA,OAtBAF,GAAAG,KAAA,WACA,GAAAC,GAAAZ,EAAAa,MACAC,EAAAF,EAAAG,SAAAD,IAAAX,EAAAS,EAAAI,IAAA,eACAC,EAAAP,EAAAQ,OAAA,EAAAR,EAAAA,EAAAQ,OAAA,GAAA,IAEA,QAAAD,EAEAP,EAAAS,KAAAP,GAGAQ,KAAAC,MAAAD,KAAAE,IAAAb,EAAAK,KAhBA,EAiBAJ,EAAAA,EAAAQ,OAAA,GAAAD,EAAAM,IAAAX,GAGAF,EAAAS,KAAAP,GAKAH,EAAAK,IAGAJ,GAQAc,EAAA,SAAAC,GACA,GAAAC,IACAC,OAAA,EACAC,SAAA,SACAC,OAAA,KACAC,QAAA,EAGA,OAAA,gBAAAL,GACAzB,EAAA+B,OAAAL,EAAAD,IAGA,iBAAAA,GACAC,EAAAC,MAAAF,EACA,WAAAA,IACAC,EAAAI,QAAA,GAGAJ,IAQAM,EAAAhC,EAAAiC,GAAAD,YAAA,SAAAP,GACA,GAAAC,GAAAF,EAAAC,EAGA,IAAAC,EAAAI,OAAA,CACA,GAAAI,GAAArB,IAYA,OATAA,MAAAG,IAAAU,EAAAE,SAAA,IAGA5B,EAAAW,KAAAqB,EAAAG,QAAA,SAAAC,EAAAC,GACAA,EAAA9B,SAAA8B,EAAA9B,SAAA+B,IAAAJ,KAKArB,KAGA,MAAAA,MAAAK,QAAA,IAAAQ,EAAAG,OACAhB,MAIAmB,EAAAG,QAAAhB,MACAZ,SAAAM,KACAY,QAAAC,IAIAM,EAAAO,OAAA1B,KAAAa,GAEAb,MAOAmB,GAAAQ,QAAA,QACAR,EAAAG,WACAH,EAAAS,UAAA,GACAT,EAAAU,iBAAA,EACAV,EAAAW,cAAA,KACAX,EAAAY,aAAA,KACAZ,EAAA1B,MAAAA,EACA0B,EAAA7B,OAAAA,EACA6B,EAAAR,cAAAA,EAOAQ,EAAAO,OAAA,SAAAhC,EAAAkB,GACA,GAAAC,GAAAF,EAAAC,GACAjB,EAAAR,EAAAO,GACAG,GAAAF,GAGAqC,EAAA7C,EAAA8C,QAAAD,YACAE,EAAA/C,EAAA,QAAAgD,aAAA,GAGAC,EAAAzC,EAAA0C,UAAAC,OAAA,UA8HA,OA3HAF,GAAAtC,KAAA,WACA,GAAAC,GAAAZ,EAAAa,KACAD,GAAAwC,KAAA,cAAAxC,EAAAyC,KAAA,YAIAJ,EAAAjC,IAAA,UAAA,SAGAU,EAAAC,QAAAD,EAAAG,SAGArB,EAAAG,KAAA,WACA,GAAAC,GAAAZ,EAAAa,MACAyC,EAAA1C,EAAAI,IAAA,UAGA,kBAAAsC,GAAA,SAAAA,GAAA,gBAAAA,IACAA,EAAA,SAIA1C,EAAAwC,KAAA,cAAAxC,EAAAyC,KAAA,UAEAzC,EAAAI,KACAsC,QAAAA,EACAC,cAAA,IACAC,iBAAA,IACAC,aAAA,IACAC,gBAAA,IACAC,mBAAA,IACAC,sBAAA,IACAC,OAAA,QACAC,SAAA,aAKApD,EAAAJ,EAAAE,GAGAA,EAAAG,KAAA,WACA,GAAAC,GAAAZ,EAAAa,KACAD,GAAAyC,KAAA,QAAAzC,EAAAwC,KAAA,gBAAA,OAIApD,EAAAW,KAAAD,EAAA,SAAA0B,EAAA2B,GACA,GAAAC,GAAAhE,EAAA+D,GACAE,EAAA,CAEA,IAAAvC,EAAAG,OAqCAoC,EAAAvC,EAAAG,OAAAmB,aAAA,OArCA,CAEA,GAAAtB,EAAAC,OAAAqC,EAAA9C,QAAA,EAEA,WADA8C,GAAAhD,IAAAU,EAAAE,SAAA,GAKAoC,GAAArD,KAAA,WACA,GAAAC,GAAAZ,EAAAa,MACAqD,EAAAtD,EAAAyC,KAAA,SACAC,EAAA1C,EAAAI,IAAA,UAGA,kBAAAsC,GAAA,SAAAA,GAAA,gBAAAA,IACAA,EAAA,QAIA,IAAAtC,IAAAsC,QAAAA,EACAtC,GAAAU,EAAAE,UAAA,GACAhB,EAAAI,IAAAA,GAGAJ,EAAAoC,aAAA,GAAAiB,IACAA,EAAArD,EAAAoC,aAAA,IAIAkB,EACAtD,EAAAyC,KAAA,QAAAa,GAEAtD,EAAAI,IAAA,UAAA,MASAgD,EAAArD,KAAA,WACA,GAAAC,GAAAZ,EAAAa,MACAsD,EAAA,CAGAzC,GAAAG,QAAAjB,EAAAwD,GAAA1C,EAAAG,UAKA,eAAAjB,EAAAI,IAAA,gBACAmD,GAAAhE,EAAAS,EAAAI,IAAA,qBAAAb,EAAAS,EAAAI,IAAA,wBACAmD,GAAAhE,EAAAS,EAAAI,IAAA,gBAAAb,EAAAS,EAAAI,IAAA,oBAIAJ,EAAAI,IAAAU,EAAAE,SAAAqC,EAAAE,EAAA,WAKAlB,EAAAtC,KAAA,WACA,GAAAC,GAAAZ,EAAAa,KACAD,GAAAyC,KAAA,QAAAzC,EAAAwC,KAAA,gBAAA,QAIApB,EAAAU,iBACA1C,EAAA8C,QAAAD,UAAAA,EAAAE,EAAA/C,EAAA,QAAAgD,aAAA,IAGAnC,MAQAmB,EAAAqC,cAAA,WACA,GAAAC,KAGAtE,GAAA,kCAAAW,KAAA,WACA,GAAA4D,GAAAvE,EAAAa,MACA2D,EAAAD,EAAAlB,KAAA,YAAAkB,EAAAlB,KAAA,oBAGAiB,GAAAE,GADAA,IAAAF,GACAA,EAAAE,GAAAjD,IAAAgD,GAEAA,IAKAvE,EAAAW,KAAA2D,EAAA,WACAzD,KAAAmB,aAAA,KASA,IAAAyC,GAAA,SAAAC,GACA1C,EAAAW,eACAX,EAAAW,cAAA+B,EAAA1C,EAAAG,SAGAnC,EAAAW,KAAAqB,EAAAG,QAAA,WACAH,EAAAO,OAAA1B,KAAAN,SAAAM,KAAAY,WAGAO,EAAAY,cACAZ,EAAAY,aAAA8B,EAAA1C,EAAAG,SAIAH,GAAAyC,QAAA,SAAAE,EAAAD,GAIA,GAAAA,GAAA,WAAAA,EAAAE,KAAA,CACA,GAAAC,GAAA7E,EAAA8C,QAAAgC,OACA,IAAAD,IAAA5E,EACA,MAEAA,GAAA4E,EAIAF,GAEA,IAAAzE,IACAA,EAAA6E,WAAA,WACAN,EAAAC,GACAxE,GAAA,GACA8B,EAAAS,YALAgC,EAAAC,IAcA1E,EAAAgC,EAAAqC,cAGA,IAAAW,GAAAhF,EAAAiC,GAAA+C,GAAA,KAAA,MAGAhF,GAAA8C,QAAAkC,GAAA,OAAA,SAAAN,GACA1C,EAAAyC,SAAA,EAAAC,KAIA1E,EAAA8C,QAAAkC,GAAA,2BAAA,SAAAN,GACA1C,EAAAyC,SAAA,EAAAC,OAcA1E,EAAA,mBAAAiF,MAAA,WACAjF,EAAA,oBAAAkF,YAAA,YACAlF,EAAA,4BAAAmF,aACAnF,EAAA,mBAAAkF,YAAA,UAGAlF,EAAA,4BAAAiF,MAAA,WACAjF,EAAA,oBAAAkF,YAAA,YACAlF,EAAA,4BAAAmF,aACAnF,EAAA,mBAAAkF,YAAA,SAGA,IAAAE,UAAA,GAAAC,QAAA,qBAGAC,MAAA,EACAC,UAAA,EAGAC,YACAC,GAAA,sBAIAC,YACAC,OAAA,sBACAC,OAAA,uBAIAC,cAKA7F,GAAA8F,UAAAd,GAAA,QAAA,2BAAA,SAAAN,GACAA,EAAAqB,iBACA/F,EAAAa,MAAAmF,iBAGAhG,EAAA8F,UAAAG,MAAA,WACAjG,EAAA,mBAAAgF,GAAA,gBAAA,SAAAN,GACA,GAAAwB,GAAAlG,EAAA0E,EAAAyB,eACAC,EAAAF,EAAA9C,KAAA,WACApD,GAAA,WAAAqG,IAAAD,OAIApG,EAAA,WACAA,EAAA8C,QAAAgC,QAAA,IACA9E,EAAA,iBAAAsG,aACAf,UAAA,EACAD,MAAA,EACAiB,KAAA,EACAC,aAAA,GACAC,OAAA,GACAC,iBAAA,EACAC,YACAC,GACAC,MAAA,GAEAC,KACAD,MAAA,GAEAE,KACAF,MAAA,GAEAG,KACAH,MAAA,MAKA7G,EAAA,iBAAAsG,aACAf,UAAA,EACAD,MAAA,EACAiB,KAAA,EACAE,OAAA,GACAC,iBAAA,EACAC,YACAC,GACAC,MAAA,GAEAC,KACAD,MAAA,GAEAE,KACAF,MAAA,GAEAG,KACAH,MAAA,QAOA7G,EAAA8F,UAAAG,MAAA,WAEAgB,EAAAjH,EAAA,sBAAA6D,SAAA,GACA7D,EAAA,+BAAA6D,OAAAoD,GACAC,QAAAC,IAAAF,KAmBAjH,EAAA8C,QAAAgC,QAAA,KACA9E,EAAA8F,UAAAG,MAAA,WACAjG,EAAA8C,QAAAsE,OAAA,WACApH,EAAA8F,UAAAjD,YAAA,GACA7C,EAAA,YAAAqH,SAAA,WAEArH,EAAA,YAAAsH,YAAA,eAMAtH,EAAA8F,UAAAG,MAAA,WACAjG,EAAA,uBACAuH,QAAAF,SAAA","file":"main.js","sourcesContent":["\r\n/**\r\n* jquery-match-height 0.7.2 by @liabru\r\n* http://brm.io/jquery-match-height/\r\n* License: MIT\r\n*/\r\n\r\n;(function(factory) { // eslint-disable-line no-extra-semi\r\n    'use strict';\r\n    if (typeof define === 'function' && define.amd) {\r\n        // AMD\r\n        define(['jquery'], factory);\r\n    } else if (typeof module !== 'undefined' && module.exports) {\r\n        // CommonJS\r\n        module.exports = factory(require('jquery'));\r\n    } else {\r\n        // Global\r\n        factory(jQuery);\r\n    }\r\n})(function($) {\r\n    /*\r\n    *  internal\r\n    */\r\n\r\n    var _previousResizeWidth = -1,\r\n        _updateTimeout = -1;\r\n\r\n    /*\r\n    *  _parse\r\n    *  value parse utility function\r\n    */\r\n\r\n    var _parse = function(value) {\r\n        // parse value and convert NaN to 0\r\n        return parseFloat(value) || 0;\r\n    };\r\n\r\n    /*\r\n    *  _rows\r\n    *  utility function returns array of jQuery selections representing each row\r\n    *  (as displayed after float wrapping applied by browser)\r\n    */\r\n\r\n    var _rows = function(elements) {\r\n        var tolerance = 1,\r\n            $elements = $(elements),\r\n            lastTop = null,\r\n            rows = [];\r\n\r\n        // group elements by their top position\r\n        $elements.each(function(){\r\n            var $that = $(this),\r\n                top = $that.offset().top - _parse($that.css('margin-top')),\r\n                lastRow = rows.length > 0 ? rows[rows.length - 1] : null;\r\n\r\n            if (lastRow === null) {\r\n                // first item on the row, so just push it\r\n                rows.push($that);\r\n            } else {\r\n                // if the row top is the same, add to the row group\r\n                if (Math.floor(Math.abs(lastTop - top)) <= tolerance) {\r\n                    rows[rows.length - 1] = lastRow.add($that);\r\n                } else {\r\n                    // otherwise start a new row group\r\n                    rows.push($that);\r\n                }\r\n            }\r\n\r\n            // keep track of the last row top\r\n            lastTop = top;\r\n        });\r\n\r\n        return rows;\r\n    };\r\n\r\n    /*\r\n    *  _parseOptions\r\n    *  handle plugin options\r\n    */\r\n\r\n    var _parseOptions = function(options) {\r\n        var opts = {\r\n            byRow: true,\r\n            property: 'height',\r\n            target: null,\r\n            remove: false\r\n        };\r\n\r\n        if (typeof options === 'object') {\r\n            return $.extend(opts, options);\r\n        }\r\n\r\n        if (typeof options === 'boolean') {\r\n            opts.byRow = options;\r\n        } else if (options === 'remove') {\r\n            opts.remove = true;\r\n        }\r\n\r\n        return opts;\r\n    };\r\n\r\n    /*\r\n    *  matchHeight\r\n    *  plugin definition\r\n    */\r\n\r\n    var matchHeight = $.fn.matchHeight = function(options) {\r\n        var opts = _parseOptions(options);\r\n\r\n        // handle remove\r\n        if (opts.remove) {\r\n            var that = this;\r\n\r\n            // remove fixed height from all selected elements\r\n            this.css(opts.property, '');\r\n\r\n            // remove selected elements from all groups\r\n            $.each(matchHeight._groups, function(key, group) {\r\n                group.elements = group.elements.not(that);\r\n            });\r\n\r\n            // TODO: cleanup empty groups\r\n\r\n            return this;\r\n        }\r\n\r\n        if (this.length <= 1 && !opts.target) {\r\n            return this;\r\n        }\r\n\r\n        // keep track of this group so we can re-apply later on load and resize events\r\n        matchHeight._groups.push({\r\n            elements: this,\r\n            options: opts\r\n        });\r\n\r\n        // match each element's height to the tallest element in the selection\r\n        matchHeight._apply(this, opts);\r\n\r\n        return this;\r\n    };\r\n\r\n    /*\r\n    *  plugin global options\r\n    */\r\n\r\n    matchHeight.version = '0.7.2';\r\n    matchHeight._groups = [];\r\n    matchHeight._throttle = 80;\r\n    matchHeight._maintainScroll = false;\r\n    matchHeight._beforeUpdate = null;\r\n    matchHeight._afterUpdate = null;\r\n    matchHeight._rows = _rows;\r\n    matchHeight._parse = _parse;\r\n    matchHeight._parseOptions = _parseOptions;\r\n\r\n    /*\r\n    *  matchHeight._apply\r\n    *  apply matchHeight to given elements\r\n    */\r\n\r\n    matchHeight._apply = function(elements, options) {\r\n        var opts = _parseOptions(options),\r\n            $elements = $(elements),\r\n            rows = [$elements];\r\n\r\n        // take note of scroll position\r\n        var scrollTop = $(window).scrollTop(),\r\n            htmlHeight = $('html').outerHeight(true);\r\n\r\n        // get hidden parents\r\n        var $hiddenParents = $elements.parents().filter(':hidden');\r\n\r\n        // cache the original inline style\r\n        $hiddenParents.each(function() {\r\n            var $that = $(this);\r\n            $that.data('style-cache', $that.attr('style'));\r\n        });\r\n\r\n        // temporarily must force hidden parents visible\r\n        $hiddenParents.css('display', 'block');\r\n\r\n        // get rows if using byRow, otherwise assume one row\r\n        if (opts.byRow && !opts.target) {\r\n\r\n            // must first force an arbitrary equal height so floating elements break evenly\r\n            $elements.each(function() {\r\n                var $that = $(this),\r\n                    display = $that.css('display');\r\n\r\n                // temporarily force a usable display value\r\n                if (display !== 'inline-block' && display !== 'flex' && display !== 'inline-flex') {\r\n                    display = 'block';\r\n                }\r\n\r\n                // cache the original inline style\r\n                $that.data('style-cache', $that.attr('style'));\r\n\r\n                $that.css({\r\n                    'display': display,\r\n                    'padding-top': '0',\r\n                    'padding-bottom': '0',\r\n                    'margin-top': '0',\r\n                    'margin-bottom': '0',\r\n                    'border-top-width': '0',\r\n                    'border-bottom-width': '0',\r\n                    'height': '100px',\r\n                    'overflow': 'hidden'\r\n                });\r\n            });\r\n\r\n            // get the array of rows (based on element top position)\r\n            rows = _rows($elements);\r\n\r\n            // revert original inline styles\r\n            $elements.each(function() {\r\n                var $that = $(this);\r\n                $that.attr('style', $that.data('style-cache') || '');\r\n            });\r\n        }\r\n\r\n        $.each(rows, function(key, row) {\r\n            var $row = $(row),\r\n                targetHeight = 0;\r\n\r\n            if (!opts.target) {\r\n                // skip apply to rows with only one item\r\n                if (opts.byRow && $row.length <= 1) {\r\n                    $row.css(opts.property, '');\r\n                    return;\r\n                }\r\n\r\n                // iterate the row and find the max height\r\n                $row.each(function(){\r\n                    var $that = $(this),\r\n                        style = $that.attr('style'),\r\n                        display = $that.css('display');\r\n\r\n                    // temporarily force a usable display value\r\n                    if (display !== 'inline-block' && display !== 'flex' && display !== 'inline-flex') {\r\n                        display = 'block';\r\n                    }\r\n\r\n                    // ensure we get the correct actual height (and not a previously set height value)\r\n                    var css = { 'display': display };\r\n                    css[opts.property] = '';\r\n                    $that.css(css);\r\n\r\n                    // find the max height (including padding, but not margin)\r\n                    if ($that.outerHeight(false) > targetHeight) {\r\n                        targetHeight = $that.outerHeight(false);\r\n                    }\r\n\r\n                    // revert styles\r\n                    if (style) {\r\n                        $that.attr('style', style);\r\n                    } else {\r\n                        $that.css('display', '');\r\n                    }\r\n                });\r\n            } else {\r\n                // if target set, use the height of the target element\r\n                targetHeight = opts.target.outerHeight(false);\r\n            }\r\n\r\n            // iterate the row and apply the height to all elements\r\n            $row.each(function(){\r\n                var $that = $(this),\r\n                    verticalPadding = 0;\r\n\r\n                // don't apply to a target\r\n                if (opts.target && $that.is(opts.target)) {\r\n                    return;\r\n                }\r\n\r\n                // handle padding and border correctly (required when not using border-box)\r\n                if ($that.css('box-sizing') !== 'border-box') {\r\n                    verticalPadding += _parse($that.css('border-top-width')) + _parse($that.css('border-bottom-width'));\r\n                    verticalPadding += _parse($that.css('padding-top')) + _parse($that.css('padding-bottom'));\r\n                }\r\n\r\n                // set the height (accounting for padding and border)\r\n                $that.css(opts.property, (targetHeight - verticalPadding) + 'px');\r\n            });\r\n        });\r\n\r\n        // revert hidden parents\r\n        $hiddenParents.each(function() {\r\n            var $that = $(this);\r\n            $that.attr('style', $that.data('style-cache') || null);\r\n        });\r\n\r\n        // restore scroll position if enabled\r\n        if (matchHeight._maintainScroll) {\r\n            $(window).scrollTop((scrollTop / htmlHeight) * $('html').outerHeight(true));\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n    /*\r\n    *  matchHeight._applyDataApi\r\n    *  applies matchHeight to all elements with a data-match-height attribute\r\n    */\r\n\r\n    matchHeight._applyDataApi = function() {\r\n        var groups = {};\r\n\r\n        // generate groups by their groupId set by elements using data-match-height\r\n        $('[data-match-height], [data-mh]').each(function() {\r\n            var $this = $(this),\r\n                groupId = $this.attr('data-mh') || $this.attr('data-match-height');\r\n\r\n            if (groupId in groups) {\r\n                groups[groupId] = groups[groupId].add($this);\r\n            } else {\r\n                groups[groupId] = $this;\r\n            }\r\n        });\r\n\r\n        // apply matchHeight to each group\r\n        $.each(groups, function() {\r\n            this.matchHeight(true);\r\n        });\r\n    };\r\n\r\n    /*\r\n    *  matchHeight._update\r\n    *  updates matchHeight on all current groups with their correct options\r\n    */\r\n\r\n    var _update = function(event) {\r\n        if (matchHeight._beforeUpdate) {\r\n            matchHeight._beforeUpdate(event, matchHeight._groups);\r\n        }\r\n\r\n        $.each(matchHeight._groups, function() {\r\n            matchHeight._apply(this.elements, this.options);\r\n        });\r\n\r\n        if (matchHeight._afterUpdate) {\r\n            matchHeight._afterUpdate(event, matchHeight._groups);\r\n        }\r\n    };\r\n\r\n    matchHeight._update = function(throttle, event) {\r\n        // prevent update if fired from a resize event\r\n        // where the viewport width hasn't actually changed\r\n        // fixes an event looping bug in IE8\r\n        if (event && event.type === 'resize') {\r\n            var windowWidth = $(window).width();\r\n            if (windowWidth === _previousResizeWidth) {\r\n                return;\r\n            }\r\n            _previousResizeWidth = windowWidth;\r\n        }\r\n\r\n        // throttle updates\r\n        if (!throttle) {\r\n            _update(event);\r\n        } else if (_updateTimeout === -1) {\r\n            _updateTimeout = setTimeout(function() {\r\n                _update(event);\r\n                _updateTimeout = -1;\r\n            }, matchHeight._throttle);\r\n        }\r\n    };\r\n\r\n    /*\r\n    *  bind events\r\n    */\r\n\r\n    // apply on DOM ready event\r\n    $(matchHeight._applyDataApi);\r\n\r\n    // use on or bind where supported\r\n    var on = $.fn.on ? 'on' : 'bind';\r\n\r\n    // update heights on load and resize events\r\n    $(window)[on]('load', function(event) {\r\n        matchHeight._update(false, event);\r\n    });\r\n\r\n    // throttled update heights on resize events\r\n    $(window)[on]('resize orientationchange', function(event) {\r\n        matchHeight._update(true, event);\r\n    });\r\n\r\n});\r\n// $('.navbar-toggler').click(function() {\r\n//   $('.navbar-collapse').addClass('open-nav');\r\n//   $('.navbar-toggler').addClass('open-toggler');\r\n// })\r\n//\r\n// $('.navbar-toggler').click(function() {\r\n//   $('.navbar-collapse').removeClass('open-nav');\r\n//   $('.navbar-toggler').removeClass('open-toggler');\r\n// })\r\n\r\n$('.navbar-toggler').click(function(){\r\n    $('.navbar-collapse').toggleClass('open-nav');\r\n    $('.navbar-collapse-overlay').fadeToggle();\r\n    $('.navbar-toggler').toggleClass('open');\r\n});\r\n\r\n$('.navbar-collapse-overlay').click(function(){\r\n    $('.navbar-collapse').toggleClass('open-nav');\r\n    $('.navbar-collapse-overlay').fadeToggle();\r\n    $('.navbar-toggler').toggleClass('open');\r\n});\r\n\r\nvar mySwiper = new Swiper('.swiper-container', {\r\n  // Optional parameters\r\n  // direction: 'gorizontal',\r\n  loop: true,\r\n  autoplay: true,\r\n\r\n  // If we need pagination\r\n  pagination: {\r\n    el: '.swiper-pagination',\r\n  },\r\n\r\n  // Navigation arrows\r\n  navigation: {\r\n    nextEl: '.swiper-button-next',\r\n    prevEl: '.swiper-button-prev',\r\n  },\r\n\r\n  // And if we need scrollbar\r\n  scrollbar: {\r\n    // el: '.swiper-scrollbar',\r\n  },\r\n})\r\n\r\n$(document).on(\"click\", '[data-toggle=\"lightbox\"]', function(event) {\r\n  event.preventDefault();\r\n  $(this).ekkoLightbox();\r\n});\r\n\r\n$(document).ready(function(){\r\n    $('#modalPricePack').on('show.bs.modal', function (event) {\r\n      var button = $(event.relatedTarget);\r\n      var subjId = button.data('whatever');\r\n      $('#subjid').val(subjId);\r\n    })\r\n})\r\n\r\n$(function(){\r\n  if ( $(window).width() < 768 ) {\r\n    $('.owl-carousel').owlCarousel({\r\n      autoplay: false,\r\n      loop: true,\r\n      nav: true,\r\n      stagePadding: 50,\r\n      margin: 50,\r\n      responsiveClass: true,\r\n      responsive: {\r\n        0: {\r\n          items: 1\r\n        },\r\n        568: {\r\n          items: 1\r\n        },\r\n        600: {\r\n          items: 3\r\n        },\r\n        1000: {\r\n          items: 3\r\n        }\r\n      }\r\n    })\r\n  } else {\r\n    $('.owl-carousel').owlCarousel({\r\n      autoplay: false,\r\n      loop: false,\r\n      nav: false,\r\n      margin: 50,\r\n      responsiveClass: true,\r\n      responsive: {\r\n        0: {\r\n          items: 1\r\n        },\r\n        568: {\r\n          items: 1\r\n        },\r\n        600: {\r\n          items: 3\r\n        },\r\n        1000: {\r\n          items: 3\r\n        }\r\n      }\r\n    })\r\n  }\r\n});\r\n\r\n$(document).ready(function(){\r\n\r\n i = $('.post-gallery-imgs').height()-25;\r\n $('.post-gallery-gal--img__img').height(i);\r\n console.log (i);\r\n\r\n});\r\n\r\n\r\n// $(function(){\r\n//   if ( $(window).width() < 990 ) {\r\n//     $(window).scroll(function() {\r\n//\r\n//     });\r\n//   } else {\r\n//     $(window).scroll(function() {\r\n//         var top = $(document).scrollTop();\r\n//         if (top < 88) $(\".navbar-uss\").removeClass('navbar-fixed');\r\n//         else $(\".navbar-uss\").addClass('navbar-fixed');\r\n//     });\r\n//   }\r\n// });\r\n\r\nif ( $(window).width() > 768 ) {\r\n  $(document).ready(function() {\r\n    $(window).scroll(function(){\r\n    if($(document).scrollTop()>96) {\r\n       $('#nav-top').addClass('nav-min')\r\n      } else {\r\n        $('#nav-top').removeClass('nav-min')\r\n      }\r\n    })\r\n  })\r\n}\r\n\r\n$(document).ready(function () {\r\n  var $tabs = $('.services-tabs-item');\r\n  $tabs.first().addClass('show active');\r\n});\r\n"]}